{
  "packagingVersion": "0.1",
  "minDcosReleaseVersion": "1.7",
  "name": "telegraf",
  "version": "1.0.0-rc1",
  "scm": "https://github.com/influxdata/telegraf",
  "maintainer": "asthana@pythian.com",
  "website": "https://github.com/influxdata/telegraf",
  "description": "Telegraf is a metrics collection agent for InfluxDB. It can collect metrics from various sources and feed them into influx and several other sinks. \n\n",
  "tags": ["docker", "influxdb", "database", "monitoring"],
  "preInstallNotes": "This DC/OS Service is currently EXPERIMENTAL. There may be bugs, incomplete features, incorrect documentation, or other discrepancies.\n\nAdvanced Installation options notes\n\nstorage / persistence: create local persistent volumes for internal storage files to survive across restarts or failures.\n\nstorage / persistence / *external*: create external persistent volumes. This allows to use an external storage system such as Amazon EBS, OpenStack Cinder, EMC Isilon, EMC ScaleIO, EMC XtremIO, EMC VMAX and Google Compute Engine persistent storage. NOTE: To use external volumes with DC/OS, you MUST enable them during CLI or Advanced installation.\n\nstorage / host_volume:  if persistence is not selected, this package can use a local volume in the host for storage, like a local directory or an NFS mount. The parameter host_volume controls the path in the host in which these volumes will be created, which MUST be the same on all nodes of the cluster.\n\nNOTE: If you didn't select persistence in the storage section, or provided a valid value for host_volume on installation,\nYOUR DATA WILL NOT BE SAVED IN ANY WAY.\n\nnetworking / port: This DC/OS service can be accessed from any other application through a NAMED VIP in the format service_name.marathon.l4lb.thisdcos.directory:port. Check status of the VIP in the Network tab of the DC/OS Dashboard (Enterprise DC/OS only).\n\nnetworking / external_access: create an entry in Marathon-LB for accessing the service from outside of the cluster\n\nnetworking / external_access_port: port to be used in Marathon-LB for accessing the service.",
 "postInstallNotes": "Service installed.",
 "postUninstallNotes": "Service uninstalled. Note that any persisting data still exists and will need to be manually removed from the agent where the service was deployed.",
  "licenses": [
    {
      "name": "Apache License",
      "url": "http://en.wikipedia.org/wiki/Apache_License"
    }
  ]
}
